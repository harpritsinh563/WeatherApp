{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB DEV\\\\REACT\\\\WeatherApp\\\\weatherapp\\\\src\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './styles.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dotenv = require(\"dotenv\");\n\ndotenv.config({\n  path: './config.env'\n});\n\nconst Layout = () => {\n  _s();\n\n  const [time, settime] = useState(new Date().toLocaleTimeString());\n  const style1 = {\n    color: \"orange\",\n    marginTop: \"5%\"\n  };\n  const [searchVal, setSearchVal] = useState(\"Vadodara\");\n  const [tempinfo, settempinfo] = useState({});\n  const [weatherState, setWeatherstate] = useState(\"\");\n  setInterval(() => {\n    settime(new Date().toLocaleTimeString());\n  }, 1000);\n\n  const getWeather = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchVal}&units=metric&appid=${process.env.API}`;\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      const {\n        temp\n      } = data.main;\n      const {\n        main: weathertype\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const myinfo = {\n        temp,\n        weathertype,\n        name\n      };\n      settempinfo(myinfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n  useEffect(() => {\n    console.log(\"Hello \" + tempinfo.weathertype);\n\n    if (tempinfo.weathertype) {\n      switch (tempinfo.weathertype) {\n        case \"Clouds\":\n          setWeatherstate(\"wi-day-cloudy\");\n          break;\n\n        case \"Haze\":\n          setWeatherstate(\"wi-fog\");\n          break;\n\n        case \"Clear\":\n          setWeatherstate(\"wi-day-sunny\");\n          break;\n\n        default:\n          setWeatherstate(\"wi-day-sunny\");\n          break;\n      }\n    }\n  }, [tempinfo.weathertype]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"WEATHER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        value: searchVal,\n        onChange: e => setSearchVal(e.target.value),\n        className: \"SearchBar\",\n        autoFocus: true,\n        placeholder: \"Search City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"SearchButton\",\n        onClick: getWeather,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weathercond\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `wi ${weatherState}`,\n          style: style1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: tempinfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"datetime\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: new Date().toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [tempinfo.temp, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"WeatherType\",\n        children: tempinfo.weathertype\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [\"CREATED WITH \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-heart\",\n        style: {\n          color: \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 34\n      }, this), \" BY HARPRIT\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Layout, \"z35jqVY0BzpUHohiIgPqvGLW3/s=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["D:/WEB DEV/REACT/WeatherApp/weatherapp/src/Layout.js"],"names":["React","useState","useEffect","dotenv","require","config","path","Layout","time","settime","Date","toLocaleTimeString","style1","color","marginTop","searchVal","setSearchVal","tempinfo","settempinfo","weatherState","setWeatherstate","setInterval","getWeather","url","process","env","API","res","fetch","data","json","console","log","temp","main","weathertype","weather","name","myinfo","error","e","target","value","toLocaleDateString"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './styles.css'\r\nimport { useState,useEffect} from 'react';\r\nconst dotenv = require(\"dotenv\")\r\ndotenv.config({path:'./config.env'})\r\nconst Layout = () => {\r\n    const [time,settime]=useState(new Date().toLocaleTimeString());\r\n    const style1 = {color: \"orange\",marginTop: \"5%\"};\r\n    const [searchVal,setSearchVal]=useState(\"Vadodara\");\r\n    const [tempinfo,settempinfo]=useState({});\r\n    const [weatherState,setWeatherstate]=useState(\"\");\r\n\r\n    setInterval(() => {\r\n        settime(new Date().toLocaleTimeString());\r\n    }, 1000);\r\n    const getWeather = async() =>\r\n    {\r\n        try{\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchVal}&units=metric&appid=${process.env.API}`;\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            console.log(data)\r\n            const{temp} = data.main;\r\n            const {main:weathertype}=data.weather[0];\r\n            const {name}=data;\r\n            const myinfo={\r\n                temp,weathertype,name\r\n            }\r\n            settempinfo(myinfo);\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getWeather();\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        console.log(\"Hello \"+tempinfo.weathertype)\r\n        if(tempinfo.weathertype)\r\n        {\r\n            \r\n            switch (tempinfo.weathertype) {\r\n                case \"Clouds\":\r\n                    setWeatherstate(\"wi-day-cloudy\")\r\n                    break;\r\n                case \"Haze\":\r\n                    setWeatherstate(\"wi-fog\");\r\n                    break;\r\n                case \"Clear\":\r\n                    setWeatherstate(\"wi-day-sunny\");\r\n                    break;\r\n                default:\r\n                    setWeatherstate(\"wi-day-sunny\");\r\n                    break;\r\n            }\r\n        }\r\n    }, [tempinfo.weathertype])\r\n    return (\r\n            <div className=\"container\">\r\n                <div className=\"title\">WEATHER</div>\r\n                <div className=\"SearchBox\">\r\n                    <input type=\"search\" value={searchVal} onChange={(e)=>setSearchVal(e.target.value)} className=\"SearchBar\" autoFocus placeholder=\"Search City\"/>\r\n                    <button className=\"SearchButton\" onClick={getWeather}>Search</button>\r\n                </div>\r\n                <div className=\"box\">\r\n                    <div className=\"weathercond\"><i className={`wi ${weatherState}`} style={style1}></i></div>\r\n                    <div className=\"location\">{tempinfo.name}</div>\r\n                    <div className=\"datetime\">\r\n                        \r\n                    <div className=\"date\">{new Date().toLocaleDateString()}</div>\r\n                    <div className=\"time\">{time}</div>\r\n                    </div>\r\n                    <div className=\"temperature\">\r\n                        <span>{tempinfo.temp}&deg;</span>\r\n                    </div>\r\n                    <div className=\"WeatherType\">\r\n                        {tempinfo.weathertype}\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    CREATED WITH <i className=\"fas fa-heart\" style={{color:\"red\"}}></i> BY HARPRIT\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n"]},"metadata":{},"sourceType":"module"}